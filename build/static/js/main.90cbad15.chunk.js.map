{"version":3,"sources":["components/Header.js","helper.js","components/Formulario.js","components/Resumen.js","components/Resultado.js","components/Spinner.js","App.js","serviceWorker.js","index.js"],"names":["ContenedorHeader","styled","header","TextoHeader","h1","Header","titulo","primerMayuscula","texto","charAt","toUpperCase","slice","Campo","div","Label","label","Select","select","InputRadio","input","BotonCotizar","button","Error","Formulario","setResumen","setCargando","useState","marca","anio","plan","datos","setDatos","error","setError","actualizarDatos","e","target","name","value","onSubmit","preventDefault","trim","resultado","difAnios","Date","getFullYear","obtenerDiferenciaAnio","porcentajeMarca","p","obtenerPorcentajeMarca","porcentajePlan","obtenerPorcentajePlan","parseFloat","toFixed","setTimeout","onChange","type","checked","ContenedorResumen","Resumen","Resultado","ContenedorResultado","TextoResultado","Spinner","className","Contenedor","ContenedorFormulario","App","resumen","cargando","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.90cbad15.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst ContenedorHeader = styled.header`\r\n    background-color: #26C6DA;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    color: #FFFFFF\r\n\r\n`;\r\n\r\nconst TextoHeader = styled.h1`\r\n    font-size: 2rem;\r\n    margin:0;\r\n    font-family: 'Slabo 27px', serif;\r\n    text-align: center;\r\n`;\r\n\r\nconst Header = ({titulo}) => {\r\n    return ( \r\n        <ContenedorHeader>\r\n            <TextoHeader>{titulo}</TextoHeader>\r\n        </ContenedorHeader>\r\n     );\r\n}\r\n \r\nexport default Header;","export function obtenerDiferenciaAnio(anio) {\r\n    return new Date().getFullYear() - anio;\r\n}\r\n\r\nexport function obtenerPorcentajeMarca(marca) {\r\n    let p;\r\n    \r\n    switch(marca){\r\n        case 'europeo':\r\n            p = 0.3;\r\n            /* falls through */\r\n        case 'asiatico':\r\n            p = 0.05;\r\n            /* falls through */\r\n        case 'americano':\r\n            p = 0.15;\r\n            /* falls through */\r\n        default:\r\n            break;\r\n    }\r\n    return p;\r\n}\r\n\r\nexport function obtenerPorcentajePlan(plan) {\r\n    let p;\r\n    if(plan === 'basico'){\r\n        p = 0.2\r\n    }\r\n    else {\r\n        p = 0.5\r\n    }\r\n    return p;\r\n}\r\n\r\nexport function primerMayuscula(texto){\r\n    return texto.charAt(0).toUpperCase() + texto.slice(1);\r\n}","import React, {useState} from 'react';\r\nimport styled from '@emotion/styled';\r\nimport {obtenerDiferenciaAnio,obtenerPorcentajeMarca,obtenerPorcentajePlan} from '../helper'\r\n\r\nconst Campo = styled.div`\r\n    display: flex;\r\n    margin-bottom: 1rem;\r\n    align-items: center;\r\n`\r\n\r\nconst Label = styled.label`\r\n    flex: 0 0 100px;\r\n`;\r\n\r\nconst Select = styled.select`\r\n    display: block;\r\n    width: 100%;\r\n    padding: 0.5rem;\r\n    border: 1px solid #e1e1e1;\r\n    -webkit-appearance: none;\r\n`;\r\n\r\nconst InputRadio = styled.input`\r\n    margin: 0 1rem;\r\n`;\r\n\r\nconst BotonCotizar = styled.button`\r\n    margin-top: 10px;\r\n    padding: 0.5rem;\r\n    width: 100%;\r\n    background-color: #00838F;\r\n    font-size: 16px;\r\n    color: #fff;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    border: none;\r\n    transition: background-color .3s ease;\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n        background-color: #26C6DA;\r\n    }\r\n`;\r\n\r\nconst Error = styled.div`\r\n    background-color: red;\r\n    width: 100%;\r\n    color: white;\r\n    text-align: center;\r\n    margin-top: 1rem;\r\n    padding: 0.5rem;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst Formulario = ({setResumen,setCargando}) => {\r\n\r\n    const [datos,setDatos] = useState({\r\n        marca: '',\r\n        anio: '',\r\n        plan: ''\r\n    })\r\n\r\n    const [error,setError] = useState(false);\r\n\r\n    const {marca,anio,plan} = datos;\r\n\r\n    const actualizarDatos = e => {\r\n        setDatos({\r\n            ...datos,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    //Submit del formulario\r\n    const cotizarSeguro = e => {\r\n\r\n        e.preventDefault();\r\n\r\n        //Validar formulario\r\n        if(marca.trim() === '' || anio.trim() === '' || plan.trim() === ''){\r\n            setError(true);\r\n            return;\r\n        }\r\n        setError(false);\r\n\r\n        //Realizamos la logica del calculo\r\n        //Bse de 2000\r\n        //Por cada año, restamos 3%\r\n        //Americano 15%, Asiatico 5%, Europeo 30%\r\n        //Basico 20%, Completo 50%\r\n\r\n        let resultado = 2000\r\n        const difAnios = obtenerDiferenciaAnio(anio);\r\n        const porcentajeMarca = obtenerPorcentajeMarca(marca);\r\n        const porcentajePlan = obtenerPorcentajePlan(plan)\r\n        resultado = resultado\r\n            + resultado * porcentajeMarca \r\n            - resultado * (difAnios * 0.03)\r\n            + resultado * porcentajePlan;\r\n        resultado = parseFloat(resultado).toFixed(2); //2 decimales\r\n        \r\n        setCargando(true);\r\n\r\n        setTimeout(() => {\r\n            //Eliminar spinner\r\n            setCargando(false);\r\n            //Pasar valor al componente\r\n            setResumen({\r\n                resultado,\r\n                datos\r\n            });\r\n        },2000);\r\n    }\r\n\r\n\r\n    return ( \r\n        <form\r\n            onSubmit={cotizarSeguro}\r\n        >\r\n            <Campo>\r\n                <Label>Marca</Label>\r\n                <Select\r\n                    name=\"marca\"\r\n                    value={marca}\r\n                    onChange={actualizarDatos}\r\n                >\r\n                    <option value=\"\">-- Seleccione --</option>\r\n                    <option value=\"americano\">Americano</option>\r\n                    <option value=\"europeo\">Europeo</option>\r\n                    <option value=\"asiatico\">Asiatico</option>\r\n                </Select>\r\n            </Campo>\r\n            <Campo>\r\n                <Label>Año</Label>\r\n                <Select\r\n                    name=\"anio\"\r\n                    value={anio}\r\n                    onChange={actualizarDatos}\r\n                >\r\n                <option value=\"\">-- Seleccione --</option>\r\n                    <option value=\"2021\">2021</option>\r\n                    <option value=\"2020\">2020</option>\r\n                    <option value=\"2019\">2019</option>\r\n                    <option value=\"2018\">2018</option>\r\n                    <option value=\"2017\">2017</option>\r\n                    <option value=\"2016\">2016</option>\r\n                    <option value=\"2015\">2015</option>\r\n                    <option value=\"2014\">2014</option>\r\n                    <option value=\"2013\">2013</option>\r\n                    <option value=\"2012\">2012</option>\r\n                </Select>\r\n            </Campo>\r\n            <Campo>\r\n                <Label>Plan</Label>\r\n                <InputRadio\r\n                    type=\"radio\"\r\n                    name=\"plan\"\r\n                    value=\"basico\"\r\n                    checked={plan === \"basico\"}\r\n                    onChange={actualizarDatos}\r\n                /> Basico\r\n\r\n                <InputRadio\r\n                    type=\"radio\"\r\n                    name=\"plan\"\r\n                    value=\"completo\"\r\n                    checked={plan === \"completo\"}\r\n                    onChange={actualizarDatos}\r\n                /> Completo\r\n            </Campo>\r\n\r\n            <BotonCotizar type=\"submit\">Cotizar</BotonCotizar>\r\n\r\n            {   error\r\n                ? \r\n                (\r\n                    <Error> Todos los campos son obligatorios </Error>\r\n                )\r\n                :\r\n                null\r\n            }\r\n\r\n        </form>\r\n     );\r\n}\r\n \r\nexport default Formulario;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport {primerMayuscula} from '../helper';\r\n\r\nconst ContenedorResumen = styled.div`\r\n    padding: 1rem;\r\n    text-align: center;\r\n    background-color: #00838F;\r\n    color: #FFF;\r\n    margin-top: 1rem;\r\n\r\n`;\r\n\r\nconst Resumen = ({datos}) => {\r\n\r\n    const {marca,anio,plan} = datos;\r\n\r\n    if(marca===''||anio===''||plan===''){\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <ContenedorResumen>\r\n            <h2>Resumen de cotizacion</h2>\r\n            <ul>\r\n                <li>Marca: {primerMayuscula(marca)}</li>\r\n                <li>Año: {anio}</li>\r\n                <li>Plan: {primerMayuscula(plan)}</li>\r\n            </ul>\r\n        </ContenedorResumen>\r\n     );\r\n}\r\n \r\nexport default Resumen;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst Resultado = ({resultado}) => {\r\n\r\n    //Alternativa al ternario del error\r\n    if(resultado === 0) return null;\r\n\r\n    const ContenedorResultado = styled.div`\r\n        text-align: center;\r\n        padding: .5rem;\r\n        border: 1px solid #26C6DA;\r\n        background-color: rgb(127,224,237);\r\n        margin-top: 1rem;\r\n        position: relative;\r\n    `;\r\n\r\n    const TextoResultado = styled.p`\r\n        color: #00838F;\r\n        padding: 1rem;\r\n        text-transform: uppercase;\r\n        font-weight: bold;\r\n        margin: 0;\r\n    `;\r\n\r\n    return ( \r\n        <ContenedorResultado>\r\n                <TextoResultado> El total es $ {resultado} </TextoResultado>\r\n        </ContenedorResultado>\r\n        \r\n     );\r\n}\r\n \r\nexport default Resultado;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return ( \r\n        <div className=\"sk-circle\">\r\n        <div className=\"sk-circle1 sk-child\"></div>\r\n        <div className=\"sk-circle2 sk-child\"></div>\r\n        <div className=\"sk-circle3 sk-child\"></div>\r\n        <div className=\"sk-circle4 sk-child\"></div>\r\n        <div className=\"sk-circle5 sk-child\"></div>\r\n        <div className=\"sk-circle6 sk-child\"></div>\r\n        <div className=\"sk-circle7 sk-child\"></div>\r\n        <div className=\"sk-circle8 sk-child\"></div>\r\n        <div className=\"sk-circle9 sk-child\"></div>\r\n        <div className=\"sk-circle10 sk-child\"></div>\r\n        <div className=\"sk-circle11 sk-child\"></div>\r\n        <div className=\"sk-circle12 sk-child\"></div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Spinner;","import React, {useState,Fragment} from 'react';\nimport Header from './components/Header'\nimport styled from '@emotion/styled';\nimport Formulario from './components/Formulario'\nimport Resumen from './components/Resumen'\nimport Resultado from './components/Resultado'\nimport Spinner from './components/Spinner'\n\nconst Contenedor = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n`;\n\nconst ContenedorFormulario = styled.div`\n  background-color: #FFF;\n  padding: 3rem;\n`;\n\n\nfunction App() {\n\n  const [resumen,setResumen] = useState({\n      datos: {\n        marca: '',\n        plan: '',\n        anio: ''\n      },\n      resultado: 0\n  });\n\n  //El resumen contiene datos + cotizacion\n  const {datos,resultado} = resumen;\n\n  const [cargando,setCargando] = useState(false);\n\n  return (\n    <Contenedor>\n\n        <Header titulo=\"Cotizador de seguros\" />\n\n        <ContenedorFormulario>\n            <Formulario \n                setResumen = {setResumen}\n                setCargando = {setCargando}\n            />\n            {cargando \n            ?\n            <Spinner/>\n            : null\n            }\n\n            {cargando\n            ? null\n            :(\n            <Fragment>\n              <Resumen \n                  datos = {datos}\n              />\n              <Resultado \n                    resultado = {resultado}\n              />\n            </Fragment>\n            )}\n\n        </ContenedorFormulario>\n\n    </Contenedor>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}